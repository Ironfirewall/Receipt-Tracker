<%- include("partials/header"); -%>

<div class="graph">
  <% console.log(receiptList) %>
  <% var sortedArray = receiptList.sort(function(date1, date2){ %>
  <%   let d1 = new Date(date1.date), d2 = new Date(date2.date); %>
  <%   return d1-d2; %>
  <% }); %>
  <% console.log("sorted array"); %>
  <% console.log(sortedArray[0].date); %>
  <input type="text" id="graphItem" placeholder="Search for an item">
  <button id="graphButton" type="button" name="graph" onclick="displayData(<%=JSON.stringify(sortedArray) %>)">UpdateGraph</button>
  <canvas id="myChart" width="400" height="400"></canvas>
</div>


<script>
  let listOfClickedCheckboxes = [];

  //Filters through the table using jquery
  $(document).ready(function() {
    $("#myInput").on("keyup", function() {
      var value = $(this).val().toLowerCase();
      $("#myTable tr").filter(function() {
        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
      });
    });
  });


  //if one checkbox is checked, the select button changes to "Deselect"
  function toggleSelect() {
    if (document.getElementById("select").innerHTML === "Select All") {
      for (let x = 0; x < document.getElementsByName("check").length; x++) {
        document.getElementsByName("check")[x].checked = true;
      }
      document.getElementById("select").innerHTML = "Deselect  ";
    } else {
      for (let x = 0; x < document.getElementsByName("check").length; x++) {
        document.getElementsByName("check")[x].checked = false;
      }
      listOfClickedCheckboxes = [];
      document.getElementById("select").innerHTML = "Select All";
    }

  }
  // if any checkbox is checked, the "Select all" button will be changed to "Deselect"
  function detectCheck(checkId) {
    console.log(checkId);
    console.log(listOfClickedCheckboxes);
    if (listOfClickedCheckboxes.includes(checkId)) {
      listOfClickedCheckboxes = listOfClickedCheckboxes.filter(element => element != checkId);
    } else {
      listOfClickedCheckboxes.push(checkId);
    }
    document.getElementById("select").innerHTML = "Deselect  ";
    if (listOfClickedCheckboxes.length === 0) {
      document.getElementById("select").innerHTML = "Select All";
    }


  }



  //if the button "Select all" is unchanged, no data will be posted to the server for the remove route. Otherwise an array of checked items will be send to the server
  function triggerRemove() {
    if (document.getElementById("select").innerHTML === "Deselect  ") {
      document.getElementsByName('checkedItems')[0].submit();
    }
  }

  //if the button "Select all" is unchanged, no data will be posted to the server for the modify route. Otherwise an array of checked items will be send to the server
  function triggerModify() {
    if (document.getElementById("select").innerHTML === "Deselect  ") {
      document.getElementsByName('checkedItems')[0].submit();
    }
  }


  function displayData(sortedArray) {
    $("#myChart").remove();
    $("#graphButton").after(" <canvas id='myChart' width='400' height='400'></canvas> ");
    let nameOfTheItem = document.getElementById("graphItem").value;

    console.log("Testing out receipts in a script");
    console.log(sortedArray[0]);
    let dateArray = [];
    let datasets = [];
    const colors = [
      'rgba(255,99,132,1)',
      'rgba(54, 162, 235, 1)',
      'rgba(255, 206, 86, 1)',
      'rgba(75, 192, 192, 1)',
      'rgba(153, 102, 255, 1)',
      'rgba(255, 159, 64, 1)'
    ];
    const backColors = [
      'rgba(255, 99, 132, 0.2)',
      'rgba(54, 162, 235, 0.2)',
      'rgba(255, 206, 86, 0.2)',
      'rgba(75, 192, 192, 0.2)',
      'rgba(153, 102, 255, 0.2)',
      'rgba(255, 159, 64, 0.2)'
    ];

    function newPlotData(label, data, borderColor, backgroundColor) {
      this.label = label;
      this.data = [];
      this.borderColor = borderColor;
      this.backgroundColor = backgroundColor;
      this.fill = true;
    }

    function getRandomInt(max) {
      return Math.floor(Math.random() * Math.floor(max));
    }
    console.log("The color index should be");
    console.log(getRandomInt(6));
    filteredArray = sortedArray.filter(element => element.itemName.toLowerCase().includes(nameOfTheItem.toLowerCase()));
    console.log(filteredArray);
    filteredArray.forEach(element => {
      dateArray.push(new Date(element.date).toLocaleDateString());
      if (datasets.length === 0) {
        console.log("the first element is");
        console.log(element);
        let plotData = new newPlotData();
        plotData.label = element.storeName;
        let currentColor = getRandomInt(6);
        plotData.borderColor = colors[currentColor];
        plotData.backgroundColor = backColors[currentColor];
        plotData.data.push({
          x: new Date(element.date).toLocaleDateString(),
          y: element.price
        });
        datasets.push(plotData);
      } else {
        let currentData = datasets.find(e => e.label === element.storeName);
        console.log("currentDatas");
        console.log(currentData);
        if (currentData === undefined) {
          console.log("is it undefined?");
          console.log(element.storeName);
          console.log(element.price);
          let plotData = new newPlotData();
          plotData.label = element.storeName;
          let currentColor = getRandomInt(6);
          plotData.borderColor = colors[currentColor];
          plotData.backgroundColor = backColors[currentColor];
          plotData.data.push({
            x: new Date(element.date).toLocaleDateString(),
            y: element.price
          });
          console.log("The other one should be different");
          console.log(plotData);
          datasets.push(plotData);
        } else {
          currentData.data.push({
            x: new Date(element.date).toLocaleDateString(),
            y: element.price
          });
        }
      }

      //use array.find() for each element in filtered array try to organize by store name. If name is the same, add prices to price array
    });
    console.log("The datasets array consists of ");
    console.log(datasets);

    console.log("the array containing dates is:");
    console.log(dateArray);



    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: dateArray,
        datasets: datasets
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        title: {
          display: true,
          text: filteredArray[0].itemName
        }
      }
    });

  }
</script>

<form class="" action="" method="post" name="checkedItems">
  <button type="button" class="btn select-all btn-primary" id="select" onclick='toggleSelect()'>Select All</button>
  <input type="text" name="" value="" placeholder="Search for any item..." id="myInput">
  <button type="button" class="btn main-page-button btn-primary" onclick="window.location.href = '/add';">Add an item</button>
  <!-- <button class="btn main-page-button btn-primary" onclick="window.location.href = '/remove';">Remove Selected Items</button> -->

  <!-- <form class="" action="" method="post" id="checkedItems"> -->
  <button class="btn main-page-button btn-primary" formaction="/remove" onclick="triggerRemove()">Remove Selected Items</button>
  <button class="btn main-page-button btn-primary" formaction="/modify" onclick="triggerModify()">Modify Selected Items</button>
  <button type="button" class="btn main-page-button btn-primary" onclick="window.location.href = '/logout';">Log Out</button>
  <!-- formaction="/modify" -->
  <div class="tableFixHead">

    <table class="main-table">
      <thead>
        <tr>
          <th class="checkbox-width">Select</th>
          <th>Date (Y-M-D)</th>
          <th>Store Name</th>
          <th>Store Address</th>
          <th>Item Name</th>
          <th>Item Quantity</th>
          <th>Price</th>
        </tr>
      </thead>
      <tbody id="myTable">
        <!-- <form class="" action="/remove" method="post" name="checkedItems"> -->
        <% receiptList.reverse().forEach(function(receipt){ %>
        <!-- <form class="" action="" method="post" id="checkedItems"> -->
        <tr>
          <td class="checkbox-width"><input type="checkbox" name="check" value="<%=receipt._id%>" onclick="detectCheck('<%=receipt._id%>')"></td>
          <td name="date"><%= receipt.date %></td>
          <td name="name"><%= receipt.storeName %></td>
          <td><%= receipt.storeAddress %></td>
          <td name="item"><%= receipt.itemName %></td>
          <td><%= receipt.itemQuantity %></td>
          <td name="price"><%= receipt.price %></td>
        </tr>
        <!-- </form> -->
        <% }); %>
        <!-- </form> -->
      </tbody>
    </table>
  </div>
</form>
<button class="btn returnButton btn-primary" onclick="window.location.href = '/add';">Add an item</button>
<br>
<button class="btn returnButton btn-primary" onclick="window.location.href = '/remove';">Remove Items</button>


<%- include("partials/footer"); -%>
